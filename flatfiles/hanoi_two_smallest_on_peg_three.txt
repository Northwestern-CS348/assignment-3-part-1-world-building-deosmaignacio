"""
For a game where there are 5 disks,
write down the Facts and Rules to model the game state where 
disk1 and disk2 (the smallest two) are on peg3, and
other disks are on peg1.

        |            |            |
        |            |            |
        |            |            |
        |            |            |
     ---|--- disk3   |            |
    ----|----        |           -|- disk1
   -----|----- disk5 |          --|-- disk2
==========================================
       peg1         peg2         peg3
       
Example: 
fact: (pred obj1 obj2)
rule: ((pred obj1 obj2) (pred obj2 obj3)) -> (pred obj1 obj3)

"""
fact: (inst disk1 Disk)
fact: (inst disk2 Disk)
fact: (inst disk3 Disk)
fact: (inst disk4 Disk)
fact: (inst disk5 Disk)

fact: (inst base1 Base)

fact: (inst peg1 Peg)
fact: (inst peg2 Peg)
fact: (inst peg3 Peg)

fact: (on disk2 peg3)
fact: (on disk1 peg3)
fact: (on disk3 peg1)
fact: (on disk4 peg1)
fact: (on disk5 peg1)

fact: (topStack disk3 peg1)
fact: (topStack disk1 peg3)

fact: (onTop disk3 disk4)
fact: (onTop disk4 disk5)
fact: (onTop disk5 base1)
fact: (onTop disk2 base1)
fact: (onTop disk1 disk2)

fact: (larger disk3 disk1)

fact: (empty peg2)

rule: ((inst ?x Disk) (inst ?y Disk) (onTop ?x ?y)) -> (larger ?y ?x)
rule: ((inst ?x Disk) (inst ?y Disk) (inst ?y Disk) (larger ?x ?y) (larger ?y ?z)) -> (larger ?x ?z)
rule: ((inst ?x Disk) (inst ?y Peg) (topStack ?x ?y) (inst ?z Peg) (empty ?z)) -> (movable ?x ?y ?z)
rule: ((inst ?x Disk) (inst ?y Disk) (larger ?y ?x) (inst ?i Peg) (on ?x ?i) (topStack ?x ?i) (inst ?d Peg) (on ?y ?d) (topStack ?y ?d)) -> (movable ?x ?i ?d)